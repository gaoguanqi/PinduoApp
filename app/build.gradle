apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        encoding = 'utf-8'
    }

    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true


    }

    signingConfigs {
        debug {
            storeFile file(keystoreProperties.RELEASE_STOREFILE)
            storePassword keystoreProperties.RELEASE_STORE_PASSWORD
            keyAlias keystoreProperties.RELEASE_KEY_ALIAS
            keyPassword keystoreProperties.RELEASE_KEY_PASSWORD
        }

        release {
            storeFile file(keystoreProperties.RELEASE_STOREFILE)
            storePassword keystoreProperties.RELEASE_STORE_PASSWORD
            keyAlias keystoreProperties.RELEASE_KEY_ALIAS
            keyPassword keystoreProperties.RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }

        release {
            debuggable true
            //移除无用的资源文件
//            shrinkResources true
//            zipAlignEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                def fileName
                def date = new Date()
                def formattedDate = date.format('yyyyMMdd')
                if (variant.buildType.name.equals('release')) {
                    fileName = "Pinduo_V${variant.mergedFlavor.versionName}_release_${formattedDate}.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    fileName = "Pinduo_V${variant.mergedFlavor.versionName}_debug_${formattedDate}.apk"
                }
                outputFileName = fileName
            }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    //添加如下配置就ok了
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
        jumboMode = true
    }
}

dependencies {
    def room_version = "2.2.5"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.multidex:multidex:2.0.1'


    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
    implementation 'org.jetbrains.anko:anko-commons:0.10.8'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    implementation 'com.blankj:utilcodex:1.29.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
//    implementation 'com.google.guava:guava:24.1-android'

    implementation 'com.squareup.okhttp3:okhttp:4.8.0'
    implementation ('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.github.yhaolpz:FloatWindow:1.0.9'
    implementation 'com.aliyun.ams:alicloud-android-utdid:1.1.5.3'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.irozon.sneaker:sneaker:2.0.0'

    implementation 'com.github.Vove7:Android-Accessibility-Api:1.0.2'

    implementation 'com.birbit:android-priority-jobqueue:3.0.0'
//    implementation 'com.github.mjdev:libaums:0.7.0'
//    implementation 'com.github.princekin-f:EasyFloat:1.3.4'

    //room 用来保存设备信息 如IMEI 账号类型 等
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    implementation 'androidx.room:room-coroutines:2.1.0-alpha04'
    androidTestImplementation "androidx.room:room-testing:$room_version"

    implementation 'com.github.xuexiangjys:XUpdate:2.0.2'
    implementation 'com.zhy:okhttputils:2.6.2'

}


